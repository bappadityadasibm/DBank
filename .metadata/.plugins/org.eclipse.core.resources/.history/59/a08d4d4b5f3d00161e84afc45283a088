package org.retailer.shoplocator.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;
import org.retailer.helper.Location;
import org.retailer.helper.LocationHelper;
import org.retailer.shoplocator.controller.to.ShopLocationTO;
import org.retailer.shoplocator.domain.ito.ShopLocationITO;
import org.retailer.shoplocator.domain.service.ShopLocationService;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


@RestController
public class ShopLocationController {

	
	@Autowired
	private ShopLocationService shopLocationService;


	@RequestMapping(value = "/nearestShop/{latitude}/{longitude}")
	public ShopLocationTO locateNearestShopLocation(@PathVariable String latitude, @PathVariable String longitude) throws Exception
	{
		System.out.println("Input latitude inside controller="+latitude);
		System.out.println("Input longitude inside controller="+longitude);
		ShopLocationITO shopLocationITO = shopLocationService.findNearestShop(latitude, longitude);
		
		ShopLocationTO shopLocationTO = new ShopLocationTO();
		shopLocationTO.setId(shopLocationITO.getId());
		shopLocationTO.setLatitude(shopLocationITO.getLatitude());
		shopLocationTO.setLongitude(shopLocationITO.getLongitude());
		shopLocationTO.setShopId(shopLocationITO.getShopId());
		
		return shopLocationTO;
	}
	
	@RequestMapping(value = "/addShopLocation/{shopAddressNumber}/{shopAddressPostcode}/{shopId}")
	public ShopLocationTO addShopLocation(@RequestBody ShopLocationITO shopLocationITO, @PathVariable String shopAddressNumber, @PathVariable String shopAddressPostcode,@PathVariable long shopId) throws Exception
	{
		ShopLocationITO createdShopLocationITO = shopLocationService.createShopLocation(shopAddressNumber, shopAddressPostcode, shopId);
		
		ShopLocationTO shopLocationTO = new ShopLocationTO();
		shopLocationTO.setId(createdShopLocationITO.getId());
		shopLocationTO.setLatitude(createdShopLocationITO.getLatitude());
		shopLocationTO.setLongitude(createdShopLocationITO.getLongitude());
		shopLocationTO.setShopId(createdShopLocationITO.getShopId());
		
		return shopLocationTO;
	}
}
